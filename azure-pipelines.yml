trigger:
  - master
  - develop

name: $(BuildID)-$(Build.SourceBranchName)


jobs:
- job: build
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      arguments: --source https://api.nuget.org/v3/index.json

  - task: file-creator@5
    inputs:
      filepath: 'src/ITLab.Projects/appsettings.Secret.json'
      filecontent: '{}'
      endWithNewLine: true

  - task: file-creator@5
    inputs:
      filepath: 'src/ITLab.Projects.Database/appsettings.Secret.json'
      filecontent: '{}'
      endWithNewLine: true


  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: tests/**/*.fsproj
      arguments: --no-restore
  - task: DeleteFiles@1
    displayName: delete publish folder
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      Contents: '**' 
  - task: DotNetCoreCLI@2
    displayName: dotnet publish
    inputs:
      command: publish
      publishWebProjects: false
      projects: 
      arguments: -o --no-restore
      zipAfterPublish: false
      modifyOutputPath: false

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: itlab-projects-build'
    inputs:
      ArtifactName: 'itlab-projects-build'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      Contents: '**'

  - task: CopyFiles@2
    displayName: 'copy deploy artifact'
    inputs:
      SourceFolder: 'deploy'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: itlab-projects-deploy'
    inputs:
      ArtifactName: 'itlab-projects-deploy'
- job: test
  pool:
    name: Default
  steps:
  - task: CmdLine@2
    inputs:
      script: |
        docker-compose --no-ansi build
        docker-compose --no-ansi up -d web-app
        docker-compose --no-ansi up testmace
        docker-compose --no-ansi rm -s -f
      workingDirectory: './tests/docker'
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'testmace*.xml'
      searchFolder: 'tests/docker/out'
      failTaskOnFailedTests: true